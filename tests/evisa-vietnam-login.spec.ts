import { test, expect } from '@playwright/test';
import { readFileSync } from 'fs';
import path from 'path';

interface UserData {
  personalInformation: {
    surname: string;
    middleAndGivenName: string;
    dateOfBirth: string;
    dateOfBirthType: string;
    sex: string;
    nationality: string;
    identityCard: string;
    email: string;
    agreeCreateAccount: boolean;
    religion: string;
    placeOfBirth: string;
    reEnterEmail: string;
    hasOtherPassports: string;
    otherPassports?: Array<{
      passportNumber: string;
      fullName: string;
      dateOfBirth: string;
      nationality: string;
    }>;
    hasMultipleNationalities: string;
    violationOfVietnameseLaws: string;
  };
  requestedInformation: {
    visaType: string;
    validFrom: string;
    validTo: string;
  };
  passportInformation: {
    passportNumber: string;
    issuingAuthority: string;
    type: string;
    dateOfIssue: string;
    expiryDate: string;
    holdOtherValidPassports: string;
    otherValidPassports?: Array<{
      type: string;
      otherTypeSpecify: string;
      passportNumber: string;
      issuingAuthority: string;
      dateOfIssue: string;
      expiryDate: string;
    }>;
  };
  tripInformation: {
    entryDate: string;
    exitDate: string;
    purpose: string;
    portOfEntry: string;
    portOfExit: string;
    beenToVietnamLastYear: string;
    vietnamVisitsLastYear?: Array<{
      fromDate: string;
      toDate: string;
      purposeOfTrip: string;
    }>;
    hasRelativesInVietnam: string;
  };
  accommodationInformation: {
    accommodationType: string;
    invitationFromVietnameseEntity: string;
    contactPersonInVietnam: string;
    address: string;
    phoneNumber: string;
  };
  images: {
    imgPhotoFilename: string;
    imgPassportFilename: string;
  };
  loginCredentials: {
    password: string;
  };
}

test.describe('Vietnam E-Visa Application', () => {
  let userData: UserData;

  test.beforeEach(async () => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ JSON —Ñ–∞–π–ª–∞
    const userDataPath = path.join(process.cwd(), 'files/001/001.json');
    const rawData = readFileSync(userDataPath, 'utf-8');
    userData = JSON.parse(rawData);
  });

  test('–ü–æ–ª–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ –≤–∏–∑—É —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π', async ({ page }) => {
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
    test.setTimeout(120000);

    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ –≤–∏–∑—É...');

    // 1. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.goto('https://evisa.gov.vn');
    await expect(page).toHaveTitle(/Vietnam Electronic Visa/);

    // 2. –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Login
    console.log('üîê –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞...');
    await page.click('text=Login');
    
    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—Ö–æ–¥–∞
    await page.waitForSelector('input[placeholder*="Account"]');

    // 3. –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞...');
    await page.fill('input[placeholder*="Account"]', userData.personalInformation.email);
    await page.fill('input[type="password"]', userData.loginCredentials.password);

    // 4. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–ø—á—É (–∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Ä–µ—à–∏—Ç—å –∫–∞–ø—á—É –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å)
    console.log('üîç –û–∂–∏–¥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è –∫–∞–ø—á–∏...');
    await page.waitForSelector('input[placeholder*="captcha"]', { timeout: 10000 });
    
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–∏–º –ø–∞—É–∑—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∫–∞–ø—á–∏
    console.log('‚ö†Ô∏è  –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É –≤—Ä—É—á–Ω—É—é –∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...');
    await page.pause(); // –≠—Ç–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∫–∞–ø—á–∏

    // 5. –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞
    await page.click('button:has-text("Login")');
    
    // –ñ–¥—ë–º —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ - –ø–æ—è–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await page.waitForSelector('.user-icon, .account-info', { timeout: 15000 });
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É!');

    // 6. –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥–∞—á—É –∑–∞—è–≤–ª–µ–Ω–∏—è
    console.log('üìã –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥–∞—á—É –∑–∞—è–≤–ª–µ–Ω–∏—è –Ω–∞ –≤–∏–∑—É...');
    await page.click('text=Apply now');

    // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    await page.waitForSelector('.ant-modal-content');

    // 7. –°–æ–≥–ª–∞—à–∞–µ–º—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏
    console.log('‚úÖ –ü—Ä–∏–Ω–∏–º–∞–µ–º —É—Å–ª–æ–≤–∏—è –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏...');
    await page.check('input[type="checkbox"]:first-of-type');
    await page.check('input[type="checkbox"]:last-of-type');
    
    // –ù–∞–∂–∏–º–∞–µ–º Next
    await page.click('button:has-text("Next")');

    // 8. –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã
    await page.waitForSelector('input[id*="ttcnHo"]');
    console.log('üìù –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã...');

    // 9. –ó–∞–ø–æ–ª–Ω—è–µ–º –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    await fillPersonalInformation(page, userData);

    // 10. –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–∑–µ
    await fillRequestedInformation(page, userData);

    // 11. –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Å–ø–æ—Ä—Ç–µ
    await fillPassportInformation(page, userData);

    // 12. –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–µ–∑–¥–∫–µ
    await fillTripInformation(page, userData);

    // 13. –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–∏
    await fillAccommodationInformation(page, userData);

    // 14. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    await uploadImages(page, userData);

    console.log('üéâ –§–æ—Ä–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!');
    
    // –î–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({ 
      path: `test-results/filled-form-${Date.now()}.png`, 
      fullPage: true 
    });
  });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
async function fillPersonalInformation(page: any, userData: UserData) {
  console.log('üë§ –ó–∞–ø–æ–ª–Ω—è–µ–º –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...');

  // –§–∞–º–∏–ª–∏—è
  await page.fill('input[id*="ttcnHo"]', userData.personalInformation.surname);
  
  // –ò–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ
  await page.fill('input[id*="ttcnDemVaTen"]', userData.personalInformation.middleAndGivenName);
  
  // –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
  await page.fill('input[id*="ttcnNgayThangNamSinhStr"]', userData.personalInformation.dateOfBirth);
  
  // –ü–æ–ª
  await page.selectOption('select[id*="ttcnGioiTinh"]', userData.personalInformation.sex);
  
  // –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
  await page.selectOption('select[id*="QuocTich"]', userData.personalInformation.nationality);
  
  // –£–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏
  if (userData.personalInformation.identityCard) {
    await page.fill('input[id*="ttcnCCCD"]', userData.personalInformation.identityCard);
  }
  
  // –†–µ–ª–∏–≥–∏—è
  await page.fill('input[id*="TonGiao"]', userData.personalInformation.religion);
  
  // –ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è
  await page.fill('input[id*="NoiSinh"]', userData.personalInformation.placeOfBirth);
  
  // –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –≤–≤–æ–¥ email
  await page.fill('input[id*="EmailXacNhan"]', userData.personalInformation.reEnterEmail);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –ø—Ä–∏ –≤—ã–±–æ—Ä–µ "Yes"
  if (userData.personalInformation.hasOtherPassports === 'Yes') {
    await page.click('input[value="Yes"]'); // –í—ã–±–∏—Ä–∞–µ–º Yes –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–∞—Å–ø–æ—Ä—Ç–æ–≤
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥—Ä—É–≥–∏—Ö –ø–∞—Å–ø–æ—Ä—Ç–∞—Ö
    if (userData.personalInformation.otherPassports) {
      for (let i = 0; i < userData.personalInformation.otherPassports.length; i++) {
        const passport = userData.personalInformation.otherPassports[i];
        await page.fill(`input[id*="passport_${i}"]`, passport.passportNumber);
        await page.fill(`input[id*="fullname_${i}"]`, passport.fullName);
        await page.fill(`input[id*="dob_${i}"]`, passport.dateOfBirth);
        await page.fill(`input[id*="nationality_${i}"]`, passport.nationality);
      }
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–π –≤–∏–∑–µ
async function fillRequestedInformation(page: any, userData: UserData) {
  console.log('üìÑ –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–∑–µ...');

  // –¢–∏–ø –≤–∏–∑—ã
  await page.selectOption('select[id*="LoaiVisa"]', userData.requestedInformation.visaType);
  
  // –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –¥–µ–π—Å—Ç–≤–∏—è
  await page.fill('input[id*="NgayBatDau"]', userData.requestedInformation.validFrom);
  
  // –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
  await page.fill('input[id*="NgayKetThuc"]', userData.requestedInformation.validTo);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Å–ø–æ—Ä—Ç–µ
async function fillPassportInformation(page: any, userData: UserData) {
  console.log('üìò –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Å–ø–æ—Ä—Ç–µ...');

  // –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞
  await page.fill('input[id*="SoHoChieu"]', userData.passportInformation.passportNumber);
  
  // –û—Ä–≥–∞–Ω –≤—ã–¥–∞—á–∏
  await page.fill('input[id*="NoiCap"]', userData.passportInformation.issuingAuthority);
  
  // –¢–∏–ø –ø–∞—Å–ø–æ—Ä—Ç–∞
  await page.selectOption('select[id*="LoaiHoChieu"]', userData.passportInformation.type);
  
  // –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏
  await page.fill('input[id*="NgayCap"]', userData.passportInformation.dateOfIssue);
  
  // –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è
  await page.fill('input[id*="NgayHetHan"]', userData.passportInformation.expiryDate);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –ø–∞—Å–ø–æ—Ä—Ç–æ–≤
  if (userData.passportInformation.holdOtherValidPassports === 'Yes') {
    await page.click('input[value="Yes"]'); // –í—ã–±–∏—Ä–∞–µ–º Yes –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–∞—Å–ø–æ—Ä—Ç–æ–≤
    
    if (userData.passportInformation.otherValidPassports) {
      for (let i = 0; i < userData.passportInformation.otherValidPassports.length; i++) {
        const passport = userData.passportInformation.otherValidPassports[i];
        await page.selectOption(`select[id*="type_${i}"]`, passport.type);
        await page.fill(`input[id*="passport_${i}"]`, passport.passportNumber);
        await page.fill(`input[id*="authority_${i}"]`, passport.issuingAuthority);
        await page.fill(`input[id*="issue_${i}"]`, passport.dateOfIssue);
        await page.fill(`input[id*="expiry_${i}"]`, passport.expiryDate);
      }
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–µ–∑–¥–∫–µ
async function fillTripInformation(page: any, userData: UserData) {
  console.log('‚úàÔ∏è –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–µ–∑–¥–∫–µ...');

  // –î–∞—Ç–∞ –≤—ä–µ–∑–¥–∞
  await page.fill('input[id*="NgayNhapCanh"]', userData.tripInformation.entryDate);
  
  // –î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞
  await page.fill('input[id*="NgayXuatCanh"]', userData.tripInformation.exitDate);
  
  // –¶–µ–ª—å –ø–æ–µ–∑–¥–∫–∏
  await page.selectOption('select[id*="MucDich"]', userData.tripInformation.purpose);
  
  // –ü–æ—Ä—Ç –≤—ä–µ–∑–¥–∞
  await page.selectOption('select[id*="CuaKhauNhap"]', userData.tripInformation.portOfEntry);
  
  // –ü–æ—Ä—Ç –≤—ã–µ–∑–¥–∞
  await page.selectOption('select[id*="CuaKhauXuat"]', userData.tripInformation.portOfExit);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–µ–∑–¥–æ–∫ –≤–æ –í—å–µ—Ç–Ω–∞–º
  if (userData.tripInformation.beenToVietnamLastYear === 'Yes') {
    await page.click('input[value="Yes"]'); // –í—ã–±–∏—Ä–∞–µ–º Yes –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø–æ–µ–∑–¥–æ–∫
    
    if (userData.tripInformation.vietnamVisitsLastYear) {
      for (let i = 0; i < userData.tripInformation.vietnamVisitsLastYear.length; i++) {
        const visit = userData.tripInformation.vietnamVisitsLastYear[i];
        await page.fill(`input[id*="from_${i}"]`, visit.fromDate);
        await page.fill(`input[id*="to_${i}"]`, visit.toDate);
        await page.fill(`input[id*="purpose_${i}"]`, visit.purposeOfTrip);
      }
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–∏
async function fillAccommodationInformation(page: any, userData: UserData) {
  console.log('üè® –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–∏...');

  // –¢–∏–ø –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è
  await page.selectOption('select[id*="LoaiLuuTru"]', userData.accommodationInformation.accommodationType);
  
  // –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç –≤—å–µ—Ç–Ω–∞–º—Å–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
  await page.selectOption('select[id*="ThiMoi"]', userData.accommodationInformation.invitationFromVietnameseEntity);
  
  // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –≤–æ –í—å–µ—Ç–Ω–∞–º–µ
  await page.fill('input[id*="NguoiLienHe"]', userData.accommodationInformation.contactPersonInVietnam);
  
  // –ê–¥—Ä–µ—Å
  await page.fill('input[id*="DiaChi"]', userData.accommodationInformation.address);
  
  // –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  await page.fill('input[id*="SoDienThoai"]', userData.accommodationInformation.phoneNumber);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
async function uploadImages(page: any, userData: UserData) {
  console.log('üì∏ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');

  // –ü—É—Ç—å –∫ —Ñ–æ—Ç–æ
  const photoPath = path.join(process.cwd(), 'files', userData.images.imgPhotoFilename);
  const passportPath = path.join(process.cwd(), 'files', userData.images.imgPassportFilename);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ
  const photoInput = page.locator('input[id*="anhMat"]');
  await photoInput.setInputFiles(photoPath);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫–∞–Ω –ø–∞—Å–ø–æ—Ä—Ç–∞
  const passportInput = page.locator('input[id*="anhHoChieu"]');
  await passportInput.setInputFiles(passportPath);

  // –ñ–¥—ë–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  await page.waitForTimeout(3000);
} 