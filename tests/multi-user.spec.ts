import { test, expect } from '@playwright/test';
import EvisaVietnamAgreementPage from '../pages/evisaVietnamAgreement.page';
import EvisaVietnamPage, { UserData } from '../pages/evisaVietnam.page';
import { UserManager } from '../utils/userManager';
import { delay, logWithTimestamp } from '../utils';

const urlEvisa = 'https://evisa.xuatnhapcanh.gov.vn/en_US/web/guest/khai-thi-thuc-dien-tu/cap-thi-thuc-dien-tu';

test.describe('–ú—É–ª—å—Ç–∏–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–µ—Å—Ç—ã', () => {
    const userManager = new UserManager();

    test.beforeAll(async () => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const status = userManager.getUsersStatus();
        console.log('\nüìä –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
        
        for (const [userId, userStatus] of Object.entries(status)) {
            const readyIcon = userStatus.ready ? '‚úÖ' : '‚ùå';
            const dataIcon = userStatus.hasData ? 'üìù' : '‚ùå';
            const imageIcon = userStatus.hasImages ? 'üñºÔ∏è' : '‚ùå';
            
            console.log(`${readyIcon} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}: –î–∞–Ω–Ω—ã–µ ${dataIcon} | –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${imageIcon}`);
        }
    });

    test('–¢–µ—Å—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º 001', async ({ page }) => {
        if (!userManager.isUserReady('001')) {
            test.skip('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 001 –Ω–µ –≥–æ—Ç–æ–≤ (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)');
        }

        logWithTimestamp('–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 001');
        const userData = userManager.loadUserData('001');
        userManager.switchToUser('001');

        await page.goto(urlEvisa);

        // –ü—Ä–æ—Ö–æ–¥–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
        const agreementPage = new EvisaVietnamAgreementPage(page);
        await agreementPage.aCheckPage();
        await agreementPage.aCheckCheckboxAgreement();
        await agreementPage.aClickBtnNext();

        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
        const evisaPage = new EvisaVietnamPage(page);
        await evisaPage.aCheckPage();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        await evisaPage.aUploadFileImgPhoto(userData.imgPhotoFilename);
        await evisaPage.aUploadFileImgPassport(userData.imgPassportFilename);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        await evisaPage.aFillAllData(userData);
        
        await delay(3000);
        logWithTimestamp('–§–æ—Ä–º–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 001 —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
    });

    test('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏', async ({ page }) => {
        const availableUsers = userManager.getAvailableUsers();
        
        if (availableUsers.length === 0) {
            test.skip('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏');
        }

        logWithTimestamp(`–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${availableUsers.join(', ')}`);

        for (const userId of availableUsers.slice(0, 2)) { // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã—Ö 2 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if (!userManager.isUserReady(userId)) {
                logWithTimestamp(`–ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} - –Ω–µ –≥–æ—Ç–æ–≤`);
                continue;
            }

            logWithTimestamp(`–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
            
            const userData = userManager.loadUserData(userId);
            userManager.switchToUser(userId);

            await page.goto(urlEvisa);

            const agreementPage = new EvisaVietnamAgreementPage(page);
            await agreementPage.aCheckPage();
            await agreementPage.aCheckCheckboxAgreement();
            await agreementPage.aClickBtnNext();

            const evisaPage = new EvisaVietnamPage(page);
            await evisaPage.aCheckPage();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            await evisaPage.aUploadFileImgPhoto(userData.imgPhotoFilename);
            await evisaPage.aUploadFileImgPassport(userData.imgPassportFilename);
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            await evisaPage.aFillPersonalData(userData);
            
            await delay(1000);
            logWithTimestamp(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
        }
    });

    test('–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', async () => {
        const newUserId = '010'; // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 010 –∫–∞–∫ —Ç–µ—Å—Ç–æ–≤—ã–π
        
        logWithTimestamp(`–°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${newUserId}`);
        const template = userManager.createUserTemplate(newUserId);
        
        expect(template.surname).toBe('–§–ê–ú–ò–õ–ò–Ø');
        expect(template.imgPhotoFilename).toBe('010/010-01.jpg');
        expect(template.imgPassportFilename).toBe('010/010-02.jpg');
        
        logWithTimestamp(`–®–∞–±–ª–æ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${newUserId} —Å–æ–∑–¥–∞–Ω`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–ª—Å—è
        const loadedData = userManager.loadUserData(newUserId);
        expect(loadedData.surname).toBe('–§–ê–ú–ò–õ–ò–Ø');
    });
}); 