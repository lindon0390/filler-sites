import { test, expect } from '@playwright/test';
import { readFileSync } from 'fs';
import path from 'path';
import { MainPage, LoginPage, ApplicationFormPage, LoginData } from '../pages';
import { connectAndGetPage, checkChromeAvailability, isAuthorizationNeeded, isBrowserOpenMode, logCurrentConfig } from '../utils';

test.describe('üöÄ Vietnam E-Visa - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–ª–æ—É (.env —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ)', () => {
  let loginData: LoginData;
  let mainPage: MainPage;
  let loginPage: LoginPage;
  let applicationFormPage: ApplicationFormPage;

  test.beforeEach(async ({ page: playwrightPage }) => {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ .env
    console.log('üîß –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ .env —Ñ–∞–π–ª–∞...');
    logCurrentConfig();
    
    let page;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –±—Ä–∞—É–∑–µ—Ä–∞
    if (isBrowserOpenMode()) {
      console.log('üîó –†–µ–∂–∏–º: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É Chrome...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Chrome –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      const isChromeAvailable = await checkChromeAvailability(9222);
      
      if (!isChromeAvailable) {
        console.log('‚ùå Chrome –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è!');
        console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ Chrome –∫–æ–º–∞–Ω–¥–æ–π: npm run chrome:debug');
        console.log('üí° –ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ BROWSER_OPEN=false –≤ .env –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞');
        throw new Error('Chrome –Ω–µ –∑–∞–ø—É—â–µ–Ω —Å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–º –ø–æ—Ä—Ç–æ–º 9222. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run chrome:debug');
      }
      
      // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É Chrome
      const { browser, page: connectedPage } = await connectAndGetPage(9222);
      page = connectedPage;
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É Chrome –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
    } else {
      console.log('üÜï –†–µ–∂–∏–º: –∑–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞...');
      page = playwrightPage;
      console.log('‚úÖ –ù–æ–≤—ã–π –±—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω');
    }
    
    // –°–æ–∑–¥–∞—ë–º –≤—Å–µ —Ç—Ä–∏ Page Object –∫–ª–∞—Å—Å–∞
    mainPage = new MainPage(page);
    loginPage = new LoginPage(page);
    applicationFormPage = new ApplicationFormPage(page);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ .env
    const userSelection = applicationFormPage.aSelectUserFromConfig();
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const userDataPath = path.join(process.cwd(), userSelection.userDataPath);
    const rawData = readFileSync(userDataPath, 'utf-8');
    const userData = JSON.parse(rawData);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    loginData = {
      email: userData.login || userData.personalInformation?.email || 'lindon0390@gmail.com',
      password: userData.password || userData.loginCredentials?.password || 'Timur123!'
    };
    
    console.log(`üìß Email –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${loginData.email}`);
  });

  test('üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–ª–æ—É (—É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ .env)', async () => {
    test.setTimeout(600000); // 10 –º–∏–Ω—É—Ç

    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–ª–æ—É –Ω–∞ –æ—Å–Ω–æ–≤–µ .env –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
    
    const authNeeded = isAuthorizationNeeded();
    console.log(`üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ${authNeeded ? '—Ç—Ä–µ–±—É–µ—Ç—Å—è' : '–ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è'}`);

    // –≠–¢–ê–ü 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    console.log('\nüåê –≠–¢–ê–ü 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
    await mainPage.aGoToMainPage();

    if (authNeeded) {
      // –≠–¢–ê–ü 2: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
      console.log('\nüîê –≠–¢–ê–ü 2: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
      await mainPage.aClickLoginButton();
      await loginPage.aCompleteLogin(loginData);
      await loginPage.aVerifyLoginSuccess();
      await mainPage.aCheckAuthorizationSuccess();
    } else {
      console.log('\n‚è≠Ô∏è –≠–¢–ê–ü 2: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ —Å–æ–≥–ª–∞—Å–Ω–æ .env –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º');
    }

    // –≠–¢–ê–ü 3: –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –∑–∞—è–≤–ª–µ–Ω–∏—è
    console.log('\nüìã –≠–¢–ê–ü 3: –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –∑–∞—è–≤–ª–µ–Ω–∏—è');
    await mainPage.aNavigateToApplicationForm();

    // –≠–¢–ê–ü 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–ª–µ–Ω–∏—è
    console.log('\nüìÑ –≠–¢–ê–ü 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º—ã –∑–∞—è–≤–ª–µ–Ω–∏—è');
    await applicationFormPage.aVerifyFormReady();
    
    const selectedUser = applicationFormPage.aSelectUserFromConfig();
    
    // –î–µ–ª–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Ñ–æ—Ä–º—ã –∑–∞—è–≤–ª–µ–Ω–∏—è
    await applicationFormPage.aTakeScreenshot('env-auto-flow-ready');
    
    console.log('\nüéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–ª–æ—É –∑–∞–≤–µ—Ä—à—ë–Ω!');
    console.log(`üë§ –í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${selectedUser.userId} (–∏–∑ .env)`);
    
    if (isBrowserOpenMode()) {
      console.log('üîó –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã');
    } else {
      console.log('üÜï –ù–æ–≤—ã–π –±—Ä–∞—É–∑–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Å–æ–≥–ª–∞—Å–Ω–æ .env –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º');
    }
  });

  test.skip('–¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (—É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ .env)', async () => {
    console.log('üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å–æ–≥–ª–∞—Å–Ω–æ .env –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º...');
    
    const authNeeded = isAuthorizationNeeded();
    
    // –≠–¢–ê–ü 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    await mainPage.aGoToMainPage();

    if (authNeeded) {
      // –≠–¢–ê–ü 2: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
      await mainPage.aClickLoginButton();
      await loginPage.aCompleteLogin(loginData);
      await loginPage.aVerifyLoginSuccess();
      await mainPage.aCheckAuthorizationSuccess();
      
      await mainPage.aTakeScreenshot('env-authorized-main-page');
      console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    } else {
      console.log('‚è≠Ô∏è –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ —Å–æ–≥–ª–∞—Å–Ω–æ AUTHORIZATION_NEEDED=false');
      await mainPage.aTakeScreenshot('env-no-auth-main-page');
    }
  });

  test.skip('–¢–æ–ª—å–∫–æ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)', async () => {
    console.log('üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –∑–∞—è–≤–ª–µ–Ω–∏—è...');
    console.log('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
    
    // –≠–¢–ê–ü 1: –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await mainPage.aGoToMainPage();
    
    // –≠–¢–ê–ü 2: –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ
    await mainPage.aNavigateToApplicationForm();
    
    // –≠–¢–ê–ü 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–æ—Ä–º—ã
    await applicationFormPage.aVerifyFormReady();
    
    const selectedUser = applicationFormPage.aSelectUserFromConfig();
    
    await applicationFormPage.aTakeScreenshot('env-form-ready');
    
    console.log('üìù –§–æ—Ä–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é!');
    console.log(`üë§ –í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${selectedUser.userId} (–∏–∑ .env)`);
  });

}); 