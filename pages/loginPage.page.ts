import { Page, Locator, expect } from '@playwright/test';

export interface LoginData {
  email: string;
  password: string;
}

export class LoginPage {
  readonly page: Page;
  
  // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞
  readonly eAccountField: Locator;
  readonly ePasswordField: Locator;
  readonly eCaptchaField: Locator;
  readonly eLoginFormButton: Locator;

  constructor(page: Page) {
    this.page = page;
    
    // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–æ–≥–∏–Ω–∞
    this.eAccountField = page.getByRole('textbox', { name: 'Account *' });
    this.ePasswordField = page.getByRole('textbox', { name: 'Password *' });
    this.eCaptchaField = page.getByRole('textbox', { name: 'Captcha' });
    this.eLoginFormButton = page.locator('form').getByRole('button', { name: 'Login' });
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞
   */
  async aCheckLoginPage() {
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞...');
    
    await expect(this.page).toHaveURL(/.*login/, { timeout: 20000 });
    await expect(this.page).toHaveTitle(/Login/, { timeout: 20000 });
    await expect(this.eAccountField).toBeVisible({ timeout: 20000 });
    
    console.log('‚úÖ –ù–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ª–æ–≥–∏–Ω–∞');
  }

  /**
   * –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞ –∏ –∂–¥—ë–º –≤–≤–æ–¥–∞ 6-–∑–Ω–∞—á–Ω–æ–π –∫–∞–ø—á–∏ (30 —Å–µ–∫—É–Ω–¥)
   */
  async aFillLoginForm(loginData: LoginData) {
    console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    
    // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
    await this.eAccountField.waitFor({ timeout: 20000 });
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
    await this.eAccountField.fill(loginData.email);
    await this.ePasswordField.fill(loginData.password);
    
    // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞–ø—á–∏
    await this.eCaptchaField.waitFor({ timeout: 20000 });
    
    console.log('üìß Email –≤–≤–µ–¥—ë–Ω:', loginData.email);
    console.log('üîë –ü–∞—Ä–æ–ª—å –≤–≤–µ–¥—ë–Ω');
    console.log('üî¢ –ö–ê–ü–ß–ê: –í–≤–µ–¥–∏—Ç–µ 6-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!');
    console.log('‚è∞ –£ –≤–∞—Å –µ—Å—Ç—å 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–≤–æ–¥–∞ –∫–∞–ø—á–∏...');
    
    // –ñ–¥—ë–º –≤–≤–æ–¥–∞ 6-–∑–Ω–∞—á–Ω–æ–π –∫–∞–ø—á–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥
    const startTime = Date.now();
    const timeoutMs = 30 * 1000; // 30 —Å–µ–∫—É–Ω–¥
    
    while (Date.now() - startTime < timeoutMs) {
      const captchaValue = await this.eCaptchaField.inputValue();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —Ä–æ–≤–Ω–æ 6 —Ü–∏—Ñ—Ä
      if (captchaValue && /^\d{6}$/.test(captchaValue)) {
        console.log(`‚úÖ –ö–∞–ø—á–∞ –≤–≤–µ–¥–µ–Ω–∞: ${captchaValue} (6 —Ü–∏—Ñ—Ä)`);
        return;
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
      const elapsed = Date.now() - startTime;
      const remaining = Math.max(0, Math.ceil((timeoutMs - elapsed) / 1000));
      
      if (elapsed % 5000 < 1000) { // –ü—Ä–∏–º–µ—Ä–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        console.log(`‚è≥ –û–∂–∏–¥–∞–µ–º 6-–∑–Ω–∞—á–Ω—É—é –∫–∞–ø—á—É... –û—Å—Ç–∞–ª–æ—Å—å: ${remaining} —Å–µ–∫—É–Ω–¥`);
        if (captchaValue) {
          console.log(`   –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: "${captchaValue}" (–¥–ª–∏–Ω–∞: ${captchaValue.length})`);
        }
      }
      
      await this.page.waitForTimeout(1000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    }
    
    // –ï—Å–ª–∏ –≤—Ä–µ–º—è –≤—ã—à–ª–æ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –ø–∞–¥–∞–µ–º —Å –æ—à–∏–±–∫–æ–π
    const finalCaptchaValue = await this.eCaptchaField.inputValue();
    console.log(`‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∫–∞–ø—á–∏ –∏—Å—Ç–µ–∫–ª–æ (30 —Å–µ–∫—É–Ω–¥)`);
    console.log(`   –§–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: "${finalCaptchaValue}"`);
    console.log(`   –¢—Ä–µ–±—É–µ—Ç—Å—è: 6-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ`);
    
    throw new Error(`–ö–∞–ø—á–∞ –Ω–µ –≤–≤–µ–¥–µ–Ω–∞ –∑–∞ 30 —Å–µ–∫—É–Ω–¥. –ü–æ–ª—É—á–µ–Ω–æ: "${finalCaptchaValue}", —Ç—Ä–µ–±—É–µ—Ç—Å—è: 6-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ`);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞
   */
  async aSubmitLoginForm() {
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    
    await this.eLoginFormButton.click();
    await this.page.waitForLoadState('networkidle', { timeout: 20000 });
    
    console.log('‚úÖ –§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
  }

  /**
   * –ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –≤–≤–æ–¥–æ–º 6-–∑–Ω–∞—á–Ω–æ–π –∫–∞–ø—á–∏ (30 —Å–µ–∫—É–Ω–¥)
   */
  async aCompleteLogin(loginData: LoginData) {
    console.log('üîê –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    console.log('üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', loginData.email);
    console.log('üî¢ –û–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ 6-–∑–Ω–∞—á–Ω–æ–π –∫–∞–ø—á–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥');
    
    try {
      await this.aCheckLoginPage();
      await this.aFillLoginForm(loginData);
      await this.aSubmitLoginForm();
      
      console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      return true;
      
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : String(error);
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', errorMessage);
      throw error;
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ URL
   */
  async aVerifyLoginSuccess() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await expect(this.page).toHaveURL('https://evisa.gov.vn/', { timeout: 20000 });
    
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ - –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
  }
} 