import { Page, Locator, expect } from '@playwright/test';

export class MainPage {
  readonly page: Page;
  
  // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  readonly eLoginButton: Locator;
  readonly eApplyNowButton: Locator;
  
  // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –ø–æ–ø–∞–ø–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
  readonly eComplianceCheckbox: Locator;
  readonly eInstructionsCheckbox: Locator;
  readonly eNextButton: Locator;

  constructor(page: Page) {
    this.page = page;
    
    // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    this.eLoginButton = page.getByRole('button', { name: 'Login' });
    this.eApplyNowButton = page.getByRole('button', { name: 'Apply now' });
    
    // –ü–æ–ø–∞–ø –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    this.eComplianceCheckbox = page.getByRole('checkbox', { name: 'Confirm compliance with' });
    this.eInstructionsCheckbox = page.getByRole('checkbox', { name: 'Confirmation of reading' });
    this.eNextButton = page.getByRole('button', { name: 'Next' });
  }

  /**
   * –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Vietnam E-Visa —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
   */
  async aGoToMainPage() {
    console.log('üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Vietnam E-Visa...');
    
    const maxAttempts = 3;
    let attempt = 1;
    
    while (attempt <= maxAttempts) {
      try {
        console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxAttempts}: –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...`);
        
        await this.page.goto('https://evisa.gov.vn/', { timeout: 20000 });
        await this.page.waitForLoadState('networkidle', { timeout: 20000 });
        await expect(this.page).toHaveTitle(/Vietnam/, { timeout: 20000 });
        
        console.log('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        return; // –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
        
      } catch (error) {
        const errorMessage = error instanceof Error ? error.message : String(error);
        console.log(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxAttempts} –Ω–µ—É–¥–∞—á–Ω–∞:`, errorMessage);
        
        if (attempt === maxAttempts) {
          console.log('‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã, –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è');
          throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞ ${maxAttempts} –ø–æ–ø—ã—Ç–æ–∫. –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${errorMessage}`);
        }
        
        console.log(`üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø—ã—Ç–∞–µ–º—Å—è —Å–Ω–æ–≤–∞...`);
        
        try {
          // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
          await this.page.reload({ timeout: 10000 });
          await this.page.waitForTimeout(2000); // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
        } catch (reloadError) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
        }
        
        attempt++;
      }
    }
  }

  /**
   * –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Login –≤ —Ö–µ–¥–µ—Ä–µ
   */
  async aClickLoginButton() {
    console.log('üîê –ö–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É Login –≤ —Ö–µ–¥–µ—Ä–µ...');
    
    await this.eLoginButton.click();
    await this.page.waitForLoadState('networkidle', { timeout: 20000 });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
    await expect(this.page).toHaveURL(/.*login/, { timeout: 20000 });
    await expect(this.page).toHaveTitle(/Login/, { timeout: 20000 });
    
    console.log('‚úÖ –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞');
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é (–∫–Ω–æ–ø–∫–∞ Login –∏—Å—á–µ–∑–ª–∞)
   */
  async aCheckAuthorizationSuccess() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
    
    await expect(this.page).toHaveURL('https://evisa.gov.vn/', { timeout: 20000 });
    
    try {
      await expect(this.eLoginButton).toBeHidden({ timeout: 10000 });
      console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ Login –∏—Å—á–µ–∑–ª–∞ –∏–∑ —Ö–µ–¥–µ—Ä–∞ - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
    } catch {
      console.log('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ Login –≤—Å—ë –µ—â—ë –≤–∏–¥–Ω–∞, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
    }
    
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');
  }

  /**
   * –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É Apply now
   */
  async aClickApplyNow() {
    console.log('üìã –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É Apply now...');
    
    await this.eApplyNowButton.click();
    await this.page.waitForLoadState('networkidle', { timeout: 20000 });
    
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ Apply now –Ω–∞–∂–∞—Ç–∞, –∂–¥—ë–º –ø–æ–ø–∞–ø —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏');
  }

  /**
   * –°—Ç–∞–≤–∏–º –≥–∞–ª–æ—á–∫–∏ –≤ –¥–≤–∞ —á–µ–∫–±–æ–∫—Å–∞ –≤ –ø–æ–ø–∞–ø–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
   */
  async aAcceptInstructions() {
    console.log('‚òëÔ∏è –°—Ç–∞–≤–∏–º –≥–∞–ª–æ—á–∫–∏ –≤ —á–µ–∫–±–æ–∫—Å—ã –ø–æ–ø–∞–ø–∞...');
    
    await this.eComplianceCheckbox.waitFor({ timeout: 20000 });
    await this.eInstructionsCheckbox.waitFor({ timeout: 20000 });
    
    await this.eComplianceCheckbox.check();
    await this.eInstructionsCheckbox.check();
    
    console.log('‚úÖ –ü–µ—Ä–≤—ã–π —á–µ–∫–±–æ–∫—Å: –°–æ–≥–ª–∞—Å–∏–µ —Å –≤—å–µ—Ç–Ω–∞–º—Å–∫–∏–º–∏ –∑–∞–∫–æ–Ω–∞–º–∏');
    console.log('‚úÖ –í—Ç–æ—Ä–æ–π —á–µ–∫–±–æ–∫—Å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π');
  }

  /**
   * –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É Next –≤ –ø–æ–ø–∞–ø–µ
   */
  async aClickNextInPopup() {
    console.log('‚û°Ô∏è –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É Next –≤ –ø–æ–ø–∞–ø–µ...');
    
    await expect(this.eNextButton).toBeEnabled({ timeout: 20000 });
    await this.eNextButton.click();
    await this.page.waitForLoadState('networkidle', { timeout: 20000 });
    
    console.log('‚úÖ –ü–æ–ø–∞–ø –∑–∞–∫—Ä—ã—Ç, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–µ –∑–∞—è–≤–ª–µ–Ω–∏—è');
  }

  /**
   * –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ñ–æ—Ä–º–µ –∑–∞—è–≤–ª–µ–Ω–∏—è (–ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
   */
  async aNavigateToApplicationForm() {
    console.log('üìã –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–µ –∑–∞—è–≤–ª–µ–Ω–∏—è...');
    
    await this.aClickApplyNow();
    await this.aAcceptInstructions();
    await this.aClickNextInPopup();
    
    console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ñ–æ—Ä–º–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à—ë–Ω');
  }

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥: –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
   */
  async aTakeScreenshot(filename: string) {
    const timestamp = Date.now();
    const fullFilename = `test-results/${filename}-${timestamp}.png`;
    
    await this.page.screenshot({ 
      path: fullFilename, 
      fullPage: true 
    });
    
    console.log(`üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: ${fullFilename}`);
  }
} 