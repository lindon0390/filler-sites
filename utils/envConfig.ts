import { config } from 'dotenv';
import path from 'path';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
config({ path: path.join(process.cwd(), '.env') });

export interface EnvConfig {
  userId: string;
  authorizationNeeded: boolean;
  browserOpen: boolean;
  chromeCdpEndpoint?: string;
}

/**
 * –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
export function getEnvConfig(): EnvConfig {
  const userId = process.env.USER_ID || '001'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 001
  const authorizationNeeded = process.env.AUTHORIZATION_NEEDED?.toLowerCase() === 'true'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é false
  const browserOpen = process.env.BROWSER_OPEN?.toLowerCase() === 'true'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é false
  const chromeCdpEndpoint = process.env.CHROME_CDP_ENDPOINT?.trim() || undefined; // WebSocket endpoint –¥–ª—è CDP
  
  console.log(`üîß –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ .env:`);
  console.log(`   üë§ USER_ID: ${userId}`);
  console.log(`   üîê AUTHORIZATION_NEEDED: ${authorizationNeeded}`);
  console.log(`   üåê BROWSER_OPEN: ${browserOpen}`);
  console.log(`   üîå CHROME_CDP_ENDPOINT: ${chromeCdpEndpoint || '–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'}`);
  
  return {
    userId,
    authorizationNeeded,
    browserOpen,
    chromeCdpEndpoint
  };
}

/**
 * –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ .env —Ñ–∞–π–ª–∞
 */
export function getUserIdFromEnv(): string {
  const config = getEnvConfig();
  return config.userId;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–∞ –ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ .env —Ñ–∞–π–ª—É
 */
export function isAuthorizationNeeded(): boolean {
  const config = getEnvConfig();
  return config.authorizationNeeded;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –±—Ä–∞—É–∑–µ—Ä —Å–æ–≥–ª–∞—Å–Ω–æ .env —Ñ–∞–π–ª—É
 */
export function isBrowserOpenMode(): boolean {
  const config = getEnvConfig();
  return config.browserOpen;
}

/**
 * –ü–æ–ª—É—á–∞–µ–º Chrome CDP endpoint –∏–∑ .env —Ñ–∞–π–ª–∞
 */
export function getChromeCdpEndpoint(): string | undefined {
  const config = getEnvConfig();
  return config.chromeCdpEndpoint;
}

/**
 * –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
 */
export function logCurrentConfig(): void {
  const config = getEnvConfig();
  
  console.log('üìã –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
  console.log(`   üë§ –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${config.userId}`);
  console.log(`   üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ${config.authorizationNeeded ? '—Ç—Ä–µ–±—É–µ—Ç—Å—è' : '–ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è'}`);
  console.log(`   üåê –ë—Ä–∞—É–∑–µ—Ä: ${config.browserOpen ? '–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É Chrome' : '–∑–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞'}`);
  if (config.browserOpen) {
    console.log(`   üîå CDP Endpoint: ${config.chromeCdpEndpoint || '–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'}`);
  }
  console.log(`   üìÅ –ü—É—Ç—å –∫ –¥–∞–Ω–Ω—ã–º: files/${config.userId}/${config.userId}.json`);
} 